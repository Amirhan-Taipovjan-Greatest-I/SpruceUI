plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'java-library'
    id 'maven-publish'
    id 'net.minecrell.licenser' version '0.4.1'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

minecraft {
}

repositories {
    mavenLocal()
    maven {
        name = "AperLambda"
        url = 'https://aperlambda.github.io/maven'
    }
}

configurations {
    api.extendsFrom libApi
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    libApi "org.jetbrains:annotations:20.1.0"
    libApi("org.aperlambda:lambdajcommon:1.8.1") {
        exclude group: 'com.google.code.gson'
        exclude group: 'com.google.guava'
    }

    testmodImplementation project(":")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

jar {
    from "LICENSE"
}

runClient {
    classpath(sourceSets.testmod.runtimeClasspath)
}

license {
    header file('HEADER')
    include '**/*.java'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            pom {
                name = "SpruceUI"
                description = "A Fabric Minecraft API mod which adds some GUI utilities."
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.libApi.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')

                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', 'compile')
                }
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            name = "BuildDirLocal"
            url = "$buildDir/repo"
        }
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/LambdAurora/SpruceUI")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}
